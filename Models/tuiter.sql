-- MySQL Script generated by MySQL Workbench
-- Tue Aug 18 13:15:16 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tuiter
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tuiter
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tuiter` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `tuiter` ;

-- -----------------------------------------------------
-- Table `tuiter`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tuiter`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `privacity` BIT NOT NULL DEFAULT 0,
  `create_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `tuiter`.`tuit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tuiter`.`tuit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idUser` INT NOT NULL,
  `message` VARCHAR(255) NOT NULL,
  `ref` INT NULL,
  `type` ENUM('rt', 'quote', 'reply') NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_ref`
    FOREIGN KEY (`idUser`)
    REFERENCES `tuiter`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `tuit_ref`
    FOREIGN KEY (`ref`)
    REFERENCES `tuiter`.`tuit` (`id`)
    ON DELETE SET NULL
    ON UPDATE SET NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tuiter`.`follower`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tuiter`.`follower` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idRef` INT NOT NULL,
  `idUser` INT NOT NULL,
  `status` BIT NOT NULL DEFAULT 0,
  `acepted_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_follow`
    FOREIGN KEY (`idRef`)
    REFERENCES `tuiter`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_follower`
    FOREIGN KEY (`idUser`)
    REFERENCES `tuiter`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tuiter`.`block`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tuiter`.`block` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idRef` INT NOT NULL,
  `idUser` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_blocker`
    FOREIGN KEY (`idRef`)
    REFERENCES `tuiter`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_block`
    FOREIGN KEY (`idUser`)
    REFERENCES `tuiter`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tuiter`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tuiter`.`like` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idTuit` INT NOT NULL,
  `idUser` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `like_ref`
    FOREIGN KEY (`idTuit`)
    REFERENCES `tuiter`.`tuit` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_like`
    FOREIGN KEY (`idUser`)
    REFERENCES `tuiter`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tuiter`.`keyword`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tuiter`.`keyword` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `word` VARCHAR(255) NOT NULL,
  `count` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

USE `tuiter`;

DELIMITER $$
USE `tuiter`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tuiter`.`follower_BEFORE_UPDATE` BEFORE UPDATE ON `follower` FOR EACH ROW
BEGIN
	IF new.status = 1 THEN
		UPDATE follower SET acepted_at = current_timestamp() WHERE id = old.id;
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
